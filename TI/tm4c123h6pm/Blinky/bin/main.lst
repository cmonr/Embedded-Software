
bin/main.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_text>:
   0:	20000100 	.word	0x20000100
   4:	000002b9 	.word	0x000002b9
   8:	000002b1 	.word	0x000002b1
   c:	000002b3 	.word	0x000002b3
  10:	000002b5 	.word	0x000002b5
  14:	000002b5 	.word	0x000002b5
  18:	000002b5 	.word	0x000002b5
	...
  2c:	000002b5 	.word	0x000002b5
  30:	000002b5 	.word	0x000002b5
  34:	00000000 	.word	0x00000000
  38:	000002b5 	.word	0x000002b5
  3c:	000002b5 	.word	0x000002b5
  40:	000002b5 	.word	0x000002b5
  44:	000002b5 	.word	0x000002b5
  48:	000002b5 	.word	0x000002b5
  4c:	000002b5 	.word	0x000002b5
  50:	000002b5 	.word	0x000002b5
  54:	000002b5 	.word	0x000002b5
  58:	000002b5 	.word	0x000002b5
  5c:	000002b5 	.word	0x000002b5
  60:	000002b5 	.word	0x000002b5
  64:	000002b5 	.word	0x000002b5
  68:	000002b5 	.word	0x000002b5
  6c:	000002b5 	.word	0x000002b5
  70:	000002b5 	.word	0x000002b5
  74:	000002b5 	.word	0x000002b5
  78:	000002b5 	.word	0x000002b5
  7c:	000002b5 	.word	0x000002b5
  80:	000002b5 	.word	0x000002b5
  84:	000002b5 	.word	0x000002b5
  88:	000002b5 	.word	0x000002b5
  8c:	000002b5 	.word	0x000002b5
  90:	000002b5 	.word	0x000002b5
  94:	000002b5 	.word	0x000002b5
  98:	000002b5 	.word	0x000002b5
  9c:	000002b5 	.word	0x000002b5
  a0:	000002b5 	.word	0x000002b5
  a4:	000002b5 	.word	0x000002b5
  a8:	000002b5 	.word	0x000002b5
  ac:	000002b5 	.word	0x000002b5
  b0:	000002b5 	.word	0x000002b5
  b4:	000002b5 	.word	0x000002b5
  b8:	000002b5 	.word	0x000002b5
  bc:	000002b5 	.word	0x000002b5
  c0:	000002b5 	.word	0x000002b5
  c4:	000002b5 	.word	0x000002b5
  c8:	000002b5 	.word	0x000002b5
  cc:	000002b5 	.word	0x000002b5
  d0:	000002b5 	.word	0x000002b5
  d4:	000002b5 	.word	0x000002b5
  d8:	000002b5 	.word	0x000002b5
  dc:	000002b5 	.word	0x000002b5
  e0:	000002b5 	.word	0x000002b5
  e4:	000002b5 	.word	0x000002b5
  e8:	00000000 	.word	0x00000000
  ec:	000002b5 	.word	0x000002b5
  f0:	000002b5 	.word	0x000002b5
  f4:	000002b5 	.word	0x000002b5
  f8:	000002b5 	.word	0x000002b5
  fc:	000002b5 	.word	0x000002b5
 100:	000002b5 	.word	0x000002b5
 104:	000002b5 	.word	0x000002b5
 108:	000002b5 	.word	0x000002b5
 10c:	000002b5 	.word	0x000002b5
	...
 118:	000002b5 	.word	0x000002b5
 11c:	000002b5 	.word	0x000002b5
 120:	000002b5 	.word	0x000002b5
 124:	000002b5 	.word	0x000002b5
 128:	000002b5 	.word	0x000002b5
 12c:	000002b5 	.word	0x000002b5
 130:	000002b5 	.word	0x000002b5
 134:	000002b5 	.word	0x000002b5
 138:	000002b5 	.word	0x000002b5
 13c:	000002b5 	.word	0x000002b5
	...
 150:	000002b5 	.word	0x000002b5
 154:	000002b5 	.word	0x000002b5
 158:	000002b5 	.word	0x000002b5
 15c:	000002b5 	.word	0x000002b5
	...
 1b0:	000002b5 	.word	0x000002b5
 1b4:	000002b5 	.word	0x000002b5
 1b8:	000002b5 	.word	0x000002b5
 1bc:	000002b5 	.word	0x000002b5
 1c0:	000002b5 	.word	0x000002b5
 1c4:	000002b5 	.word	0x000002b5
 1c8:	000002b5 	.word	0x000002b5
 1cc:	000002b5 	.word	0x000002b5
 1d0:	000002b5 	.word	0x000002b5
 1d4:	000002b5 	.word	0x000002b5
 1d8:	000002b5 	.word	0x000002b5
 1dc:	000002b5 	.word	0x000002b5
 1e0:	000002b5 	.word	0x000002b5
 1e4:	000002b5 	.word	0x000002b5
 1e8:	000002b5 	.word	0x000002b5
 1ec:	000002b5 	.word	0x000002b5
 1f0:	000002b5 	.word	0x000002b5
 1f4:	000002b5 	.word	0x000002b5
 1f8:	000002b5 	.word	0x000002b5
 1fc:	000002b5 	.word	0x000002b5
 200:	000002b5 	.word	0x000002b5
 204:	000002b5 	.word	0x000002b5
 208:	000002b5 	.word	0x000002b5
 20c:	00000000 	.word	0x00000000
 210:	000002b5 	.word	0x000002b5
 214:	000002b5 	.word	0x000002b5
 218:	000002b5 	.word	0x000002b5
 21c:	000002b5 	.word	0x000002b5
 220:	000002b5 	.word	0x000002b5
 224:	000002b5 	.word	0x000002b5
 228:	000002b5 	.word	0x000002b5
 22c:	000002b5 	.word	0x000002b5
 230:	000002b5 	.word	0x000002b5
 234:	000002b5 	.word	0x000002b5
 238:	000002b5 	.word	0x000002b5
 23c:	000002b5 	.word	0x000002b5
 240:	000002b5 	.word	0x000002b5
 244:	000002b5 	.word	0x000002b5
 248:	000002b5 	.word	0x000002b5
 24c:	000002b5 	.word	0x000002b5
 250:	000002b5 	.word	0x000002b5
 254:	000002b5 	.word	0x000002b5
 258:	000002b5 	.word	0x000002b5
 25c:	000002b5 	.word	0x000002b5
 260:	000002b5 	.word	0x000002b5
 264:	000002b5 	.word	0x000002b5
 268:	000002b5 	.word	0x000002b5

0000026c <main>:
//
// Toggle a GPIO.
//
//*****************************************************************************
int main(void)
{
 26c:	b508      	push	{r3, lr}
    //
    // Enable the GPIO module.
    //
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
 26e:	480d      	ldr	r0, [pc, #52]	; (2a4 <main+0x38>)
 270:	f000 f8d4 	bl	41c <SysCtlPeripheralEnable>
    SysCtlDelay(1);
 274:	2001      	movs	r0, #1
 276:	f000 f8e3 	bl	440 <SysCtlDelay>

    //
    // Configure PA1 as an output.
    //
    GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, GPIO_PIN_1);
 27a:	480b      	ldr	r0, [pc, #44]	; (2a8 <main+0x3c>)
 27c:	2102      	movs	r1, #2
 27e:	f000 f8bf 	bl	400 <GPIOPinTypeGPIOOutput>
    while(1)
    {
        //
        // Set the GPIO high.
        //
        GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_1, GPIO_PIN_1);
 282:	2102      	movs	r1, #2
 284:	460a      	mov	r2, r1
 286:	4808      	ldr	r0, [pc, #32]	; (2a8 <main+0x3c>)
 288:	f000 f8b7 	bl	3fa <GPIOPinWrite>

        //
        // Delay for a while.
        //
        SysCtlDelay(1000000);
 28c:	4807      	ldr	r0, [pc, #28]	; (2ac <main+0x40>)
 28e:	f000 f8d7 	bl	440 <SysCtlDelay>

        //
        // Set the GPIO low.
        //
        GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_1, 0);
 292:	4805      	ldr	r0, [pc, #20]	; (2a8 <main+0x3c>)
 294:	2102      	movs	r1, #2
 296:	2200      	movs	r2, #0
 298:	f000 f8af 	bl	3fa <GPIOPinWrite>

        //
        // Delay for a while.
        //
        SysCtlDelay(1000000);
 29c:	4803      	ldr	r0, [pc, #12]	; (2ac <main+0x40>)
 29e:	f000 f8cf 	bl	440 <SysCtlDelay>
 2a2:	e7ee      	b.n	282 <main+0x16>
 2a4:	f0000805 	.word	0xf0000805
 2a8:	40025000 	.word	0x40025000
 2ac:	000f4240 	.word	0x000f4240

000002b0 <NmiSR>:
// by a debugger.
//
//*****************************************************************************
static void
NmiSR(void)
{
 2b0:	e7fe      	b.n	2b0 <NmiSR>

000002b2 <FaultISR>:
// for examination by a debugger.
//
//*****************************************************************************
static void
FaultISR(void)
{
 2b2:	e7fe      	b.n	2b2 <FaultISR>

000002b4 <IntDefaultHandler>:
// for examination by a debugger.
//
//*****************************************************************************
static void
IntDefaultHandler(void)
{
 2b4:	e7fe      	b.n	2b4 <IntDefaultHandler>
	...

000002b8 <ResetISR>:
// application.
//
//*****************************************************************************
void
ResetISR(void)
{
 2b8:	b510      	push	{r4, lr}
 2ba:	4a0f      	ldr	r2, [pc, #60]	; (2f8 <zero_loop+0x20>)

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pui32Src = &_etext;
    for(pui32Dest = &_data; pui32Dest < &_edata; )
 2bc:	480f      	ldr	r0, [pc, #60]	; (2fc <zero_loop+0x24>)
    {
        *pui32Dest++ = *pui32Src++;
 2be:	4c10      	ldr	r4, [pc, #64]	; (300 <zero_loop+0x28>)

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pui32Src = &_etext;
    for(pui32Dest = &_data; pui32Dest < &_edata; )
 2c0:	2300      	movs	r3, #0
 2c2:	1899      	adds	r1, r3, r2
 2c4:	4281      	cmp	r1, r0
 2c6:	d203      	bcs.n	2d0 <ResetISR+0x18>
    {
        *pui32Dest++ = *pui32Src++;
 2c8:	5919      	ldr	r1, [r3, r4]
 2ca:	5099      	str	r1, [r3, r2]
 2cc:	3304      	adds	r3, #4
 2ce:	e7f8      	b.n	2c2 <ResetISR+0xa>
    }

    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_bss\n"
 2d0:	480d      	ldr	r0, [pc, #52]	; (308 <zero_loop+0x30>)
 2d2:	490e      	ldr	r1, [pc, #56]	; (30c <zero_loop+0x34>)
 2d4:	f04f 0200 	mov.w	r2, #0

000002d8 <zero_loop>:
 2d8:	4288      	cmp	r0, r1
 2da:	bfb8      	it	lt
 2dc:	f840 2b04 	strlt.w	r2, [r0], #4
 2e0:	f6ff affa 	blt.w	2d8 <zero_loop>
    // APIs must be done here prior to the floating-point unit being enabled.
    //
    // Note that this does not use DriverLib since it might not be included in
    // this project.
    //
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
 2e4:	4b07      	ldr	r3, [pc, #28]	; (304 <zero_loop+0x2c>)
 2e6:	681a      	ldr	r2, [r3, #0]
                         ~(NVIC_CPAC_CP10_M | NVIC_CPAC_CP11_M)) |
                        NVIC_CPAC_CP10_FULL | NVIC_CPAC_CP11_FULL);
 2e8:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
    // APIs must be done here prior to the floating-point unit being enabled.
    //
    // Note that this does not use DriverLib since it might not be included in
    // this project.
    //
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
 2ec:	601a      	str	r2, [r3, #0]

    //
    // Call the application's entry point.
    //
    main();
}
 2ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                        NVIC_CPAC_CP10_FULL | NVIC_CPAC_CP11_FULL);

    //
    // Call the application's entry point.
    //
    main();
 2f2:	f7ff bfbb 	b.w	26c <main>
 2f6:	bf00      	nop
 2f8:	20000000 	.word	0x20000000
 2fc:	20000000 	.word	0x20000000
 300:	00000448 	.word	0x00000448
 304:	e000ed88 	.word	0xe000ed88
 308:	20000000 	.word	0x20000000
 30c:	20000100 	.word	0x20000100

00000310 <GPIODirModeSet>:
 310:	f8d0 3400 	ldr.w	r3, [r0, #1024]	; 0x400
 314:	f012 0f01 	tst.w	r2, #1
 318:	b510      	push	{r4, lr}
 31a:	f500 6480 	add.w	r4, r0, #1024	; 0x400
 31e:	bf14      	ite	ne
 320:	430b      	orrne	r3, r1
 322:	438b      	biceq	r3, r1
 324:	6023      	str	r3, [r4, #0]
 326:	f012 0f02 	tst.w	r2, #2
 32a:	f8d0 2420 	ldr.w	r2, [r0, #1056]	; 0x420
 32e:	f500 6384 	add.w	r3, r0, #1056	; 0x420
 332:	bf14      	ite	ne
 334:	4311      	orrne	r1, r2
 336:	ea22 0101 	biceq.w	r1, r2, r1
 33a:	6019      	str	r1, [r3, #0]
 33c:	bd10      	pop	{r4, pc}

0000033e <GPIOPadConfigSet>:
 33e:	b530      	push	{r4, r5, lr}
 340:	f8d0 4500 	ldr.w	r4, [r0, #1280]	; 0x500
 344:	f012 0f01 	tst.w	r2, #1
 348:	f500 65a0 	add.w	r5, r0, #1280	; 0x500
 34c:	bf14      	ite	ne
 34e:	430c      	orrne	r4, r1
 350:	438c      	biceq	r4, r1
 352:	602c      	str	r4, [r5, #0]
 354:	f8d0 4504 	ldr.w	r4, [r0, #1284]	; 0x504
 358:	f012 0f02 	tst.w	r2, #2
 35c:	f200 5504 	addw	r5, r0, #1284	; 0x504
 360:	bf14      	ite	ne
 362:	430c      	orrne	r4, r1
 364:	438c      	biceq	r4, r1
 366:	602c      	str	r4, [r5, #0]
 368:	f8d0 4508 	ldr.w	r4, [r0, #1288]	; 0x508
 36c:	f012 0f04 	tst.w	r2, #4
 370:	f500 65a1 	add.w	r5, r0, #1288	; 0x508
 374:	bf14      	ite	ne
 376:	430c      	orrne	r4, r1
 378:	438c      	biceq	r4, r1
 37a:	602c      	str	r4, [r5, #0]
 37c:	f012 0f08 	tst.w	r2, #8
 380:	f8d0 2518 	ldr.w	r2, [r0, #1304]	; 0x518
 384:	f500 64a3 	add.w	r4, r0, #1304	; 0x518
 388:	bf14      	ite	ne
 38a:	430a      	orrne	r2, r1
 38c:	438a      	biceq	r2, r1
 38e:	6022      	str	r2, [r4, #0]
 390:	f8d0 250c 	ldr.w	r2, [r0, #1292]	; 0x50c
 394:	f013 0f01 	tst.w	r3, #1
 398:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 39c:	bf14      	ite	ne
 39e:	430a      	orrne	r2, r1
 3a0:	438a      	biceq	r2, r1
 3a2:	6022      	str	r2, [r4, #0]
 3a4:	f8d0 2510 	ldr.w	r2, [r0, #1296]	; 0x510
 3a8:	f013 0f02 	tst.w	r3, #2
 3ac:	f500 64a2 	add.w	r4, r0, #1296	; 0x510
 3b0:	bf14      	ite	ne
 3b2:	430a      	orrne	r2, r1
 3b4:	438a      	biceq	r2, r1
 3b6:	6022      	str	r2, [r4, #0]
 3b8:	f8d0 2514 	ldr.w	r2, [r0, #1300]	; 0x514
 3bc:	f013 0f04 	tst.w	r3, #4
 3c0:	f200 5414 	addw	r4, r0, #1300	; 0x514
 3c4:	bf14      	ite	ne
 3c6:	430a      	orrne	r2, r1
 3c8:	438a      	biceq	r2, r1
 3ca:	6022      	str	r2, [r4, #0]
 3cc:	f8d0 251c 	ldr.w	r2, [r0, #1308]	; 0x51c
 3d0:	f013 0f08 	tst.w	r3, #8
 3d4:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 3d8:	bf14      	ite	ne
 3da:	430a      	orrne	r2, r1
 3dc:	438a      	biceq	r2, r1
 3de:	6022      	str	r2, [r4, #0]
 3e0:	f500 62a5 	add.w	r2, r0, #1320	; 0x528
 3e4:	b91b      	cbnz	r3, 3ee <GPIOPadConfigSet+0xb0>
 3e6:	f8d0 3528 	ldr.w	r3, [r0, #1320]	; 0x528
 3ea:	4319      	orrs	r1, r3
 3ec:	e003      	b.n	3f6 <GPIOPadConfigSet+0xb8>
 3ee:	f8d0 3528 	ldr.w	r3, [r0, #1320]	; 0x528
 3f2:	ea23 0101 	bic.w	r1, r3, r1
 3f6:	6011      	str	r1, [r2, #0]
 3f8:	bd30      	pop	{r4, r5, pc}

000003fa <GPIOPinWrite>:
 3fa:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 3fe:	4770      	bx	lr

00000400 <GPIOPinTypeGPIOOutput>:
 400:	b538      	push	{r3, r4, r5, lr}
 402:	2201      	movs	r2, #1
 404:	4605      	mov	r5, r0
 406:	460c      	mov	r4, r1
 408:	2308      	movs	r3, #8
 40a:	f7ff ff98 	bl	33e <GPIOPadConfigSet>
 40e:	4628      	mov	r0, r5
 410:	4621      	mov	r1, r4
 412:	2201      	movs	r2, #1
 414:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 418:	f7ff bf7a 	b.w	310 <GPIODirModeSet>

0000041c <SysCtlPeripheralEnable>:
 41c:	4b07      	ldr	r3, [pc, #28]	; (43c <SysCtlPeripheralEnable+0x20>)
 41e:	b2c2      	uxtb	r2, r0
 420:	f3c0 2007 	ubfx	r0, r0, #8, #8
 424:	0092      	lsls	r2, r2, #2
 426:	4403      	add	r3, r0
 428:	f042 4284 	orr.w	r2, r2, #1107296256	; 0x42000000
 42c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 430:	ea42 1343 	orr.w	r3, r2, r3, lsl #5
 434:	2201      	movs	r2, #1
 436:	601a      	str	r2, [r3, #0]
 438:	4770      	bx	lr
 43a:	bf00      	nop
 43c:	400fe600 	.word	0x400fe600

00000440 <SysCtlDelay>:
 440:	3801      	subs	r0, #1
 442:	f47f affd 	bne.w	440 <SysCtlDelay>
 446:	4770      	bx	lr
